
package basic;

import io.restassured.RestAssured;
import io.restassured.path.json.JsonPath;

import static io.restassured.RestAssured.*;
import static org.hamcrest.Matchers.*;

import org.testng.Assert;

import data.Payload;


public class Basic1 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		
		//given = all input details
		//when - submit the API- recourse, http method
		//then = validate the response
		
		
		RestAssured.baseURI="https://rahulshettyacademy.com";
		
		// adding a place
		
		String response = given().log().all().queryParam("key", "quackick123").header("Content-Type", "application/json")
		.body(Payload.Addplace())
		.when().post("maps/api/place/add/json")
		.then().assertThat().log().all().statusCode(200).body("scope", equalTo("APP")).extract().response().asString();

		System.out.println(response);
		
		JsonPath js = new JsonPath(response);
		
		String placeId = js.getString("place_id");
		System.out.println("place_id: " + placeId);
		
		
		//update address of a place
		
		String newAddress = "70 cold walk, USA";  // the new address 
		
		given().log().all().queryParam("key", "quaclick123").header("Content-Type", "application/json")
		.body("{\r\n"
				+ "\"place_id\":\""+placeId+"\",\r\n"
				+ "\"address\":\""+newAddress+"\",\r\n"
				+ "\"key\":\"qaclick123\"\r\n"
				+ "}")
		.when().put("maps/api/place/update/json")
		.then().assertThat().statusCode(200).body("msg", equalTo("Address successfully updated"));
		
		
		System.out.println(placeId);
		
		//Get place
		
		String getPlaceResponse = given().log().all().queryParam("key", "qaclick123")
		.queryParam("place_id", placeId )
		.when().get("maps/api/place/update/json")
		.then().assertThat().log().all().statusCode(200).extract().response().asString();
		
	
		JsonPath js1 = new JsonPath(getPlaceResponse);  //parsing the Json  //error line
		String actualAddress = js1.getString("address");
		System.out.println(actualAddress);
		
		Assert.assertEquals(actualAddress, newAddress);
		
		// Deleting a place
		
		given().log().all().queryParam("key", "qaclick123").queryParam("place_id", placeId)
		.when().delete("maps/api/place/delete/json")
		.then().assertThat().log().all().statusCode(200).body("status", equalTo("OK"));
		
		
	}
	
}
